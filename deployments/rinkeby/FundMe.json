{
  "address": "0x1394dcee8a640aB2570451ef49D04a2F185E8a40",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__notOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addresstoAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheapWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xdb94b64f691838e64d5763d5bf8a158801a44ae95b0ed57e3358d8eb8efacdd8",
  "receipt": {
    "to": null,
    "from": "0xDc746bDFA19E442027410727f93400E95988cda8",
    "contractAddress": "0x1394dcee8a640aB2570451ef49D04a2F185E8a40",
    "transactionIndex": 7,
    "gasUsed": "1002731",
    "logsBloom": "0x
    "blockHash": "0x1036520f081b106a0b0886b62e096e4971e32a0b22b8168b517afe72f9b7e8b1",
    "transactionHash": "0xdb94b64f691838e64d5763d5bf8a158801a44ae95b0ed57e3358d8eb8efacdd8",
    "logs": [],
    "blockNumber": 10879173,
    "cumulativeGasUsed": "2282134",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 9,
  "solcInputHash": "3774871989607bcc58f81666dedcb174",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__notOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addresstoAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheapWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    address owner;\\n\\n    uint256 public constant minimumUSD = 50 * 1e18;\\n\\n    address[] public funders;\\n\\n    mapping(address => uint256) public addresstoAmountFunded;\\n\\n    error FundMe__notOwner();\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != owner) {\\n            revert FundMe__notOwner();\\n        }\\n        _;\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) > minimumUSD,\\n            \\\"You need to pay more!\\\"\\n        );\\n        funders.push(msg.sender);\\n        addresstoAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addresstoAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Failed!\\\");\\n    }\\n\\n    function cheapWithdraw() public payable {\\n        address[] memory funder = funders;\\n\\n        for (uint256 funderIndex; funderIndex < funder.length; funderIndex++) {\\n            address cheapFunder = funder[funderIndex];\\n            addresstoAmountFunded[cheapFunder] = 0;\\n        }\\n        funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Failed!\\\");\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    // view, pure\\n}\\n\",\"keccak256\":\"0x98b340dc8cca242666fe4979994d1bf72696bb45a16b0a36dd1c7f4396f0a7db\",\"license\":\"Unlicense\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethAmount * ethPrice) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x2b8936bf00b5c901ebc28b63768bc0f3efd7b65c5f02ffe49a15e4b457cafbff\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620011c6380380620011c6833981810160405281019062000037919062000129565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b61105b806200016b6000396000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100d9578063b60d428814610104578063db9bae191461010e578063dc0d3dff1461014b57610083565b8063206ddccd1461008d5780633430a88c146100975780633ccfd60b146100c257610083565b3661008357610081610188565b005b61008b610188565b005b6100956102c2565b005b3480156100a357600080fd5b506100ac6104e2565b6040516100b99190610949565b60405180910390f35b3480156100ce57600080fd5b506100d76104ef565b005b3480156100e557600080fd5b506100ee610730565b6040516100fb91906109e3565b60405180910390f35b61010c610188565b005b34801561011a57600080fd5b5061013560048036038101906101309190610a41565b610756565b6040516101429190610949565b60405180910390f35b34801561015757600080fd5b50610172600480360381019061016d9190610a9a565b61076e565b60405161017f9190610ad6565b60405180910390f35b6802b5e3af16b18800006101c7600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346107ad90919063ffffffff16565b11610207576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fe90610b4e565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102b99190610b9d565b92505081905550565b6000600180548060200260200160405190810160405280929190818152602001828054801561034657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102fc575b5050505050905060005b81518110156103d157600082828151811061036e5761036d610bf3565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103c990610c22565b915050610350565b50600067ffffffffffffffff8111156103ed576103ec610c6b565b5b60405190808252806020026020018201604052801561041b5781602001602082028036833780820191505090505b5060019080519060200190610431929190610889565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161045890610ccb565b60006040518083038185875af1925050503d8060008114610495576040519150601f19603f3d011682016040523d82523d6000602084013e61049a565b606091505b50509050806104de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d590610d2c565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610574576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156106205760006001828154811061059a57610599610bf3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061061890610c22565b915050610577565b50600067ffffffffffffffff81111561063c5761063b610c6b565b5b60405190808252806020026020018201604052801561066a5781602001602082028036833780820191505090505b5060019080519060200190610680929190610889565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516106a790610ccb565b60006040518083038185875af1925050503d80600081146106e4576040519150601f19603f3d011682016040523d82523d6000602084013e6106e9565b606091505b505090508061072d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072490610d2c565b60405180910390fd5b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b6001818154811061077e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806107b9836107e9565b90506000670de0b6b3a764000082866107d29190610d4c565b6107dc9190610dd5565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561083257600080fd5b505afa158015610846573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086a9190610e93565b5050509150506402540be400816108819190610f0e565b915050919050565b828054828255906000526020600020908101928215610902579160200282015b828111156109015782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906108a9565b5b50905061090f9190610913565b5090565b5b8082111561092c576000816000905550600101610914565b5090565b6000819050919050565b61094381610930565b82525050565b600060208201905061095e600083018461093a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109a96109a461099f84610964565b610984565b610964565b9050919050565b60006109bb8261098e565b9050919050565b60006109cd826109b0565b9050919050565b6109dd816109c2565b82525050565b60006020820190506109f860008301846109d4565b92915050565b600080fd5b6000610a0e82610964565b9050919050565b610a1e81610a03565b8114610a2957600080fd5b50565b600081359050610a3b81610a15565b92915050565b600060208284031215610a5757610a566109fe565b5b6000610a6584828501610a2c565b91505092915050565b610a7781610930565b8114610a8257600080fd5b50565b600081359050610a9481610a6e565b92915050565b600060208284031215610ab057610aaf6109fe565b5b6000610abe84828501610a85565b91505092915050565b610ad081610a03565b82525050565b6000602082019050610aeb6000830184610ac7565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f20706179206d6f7265210000000000000000000000600082015250565b6000610b38601583610af1565b9150610b4382610b02565b602082019050919050565b60006020820190508181036000830152610b6781610b2b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ba882610930565b9150610bb383610930565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610be857610be7610b6e565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c2d82610930565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c6057610c5f610b6e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cb5600083610c9a565b9150610cc082610ca5565b600082019050919050565b6000610cd682610ca8565b9150819050919050565b7f4661696c65642100000000000000000000000000000000000000000000000000600082015250565b6000610d16600783610af1565b9150610d2182610ce0565b602082019050919050565b60006020820190508181036000830152610d4581610d09565b9050919050565b6000610d5782610930565b9150610d6283610930565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d9b57610d9a610b6e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610de082610930565b9150610deb83610930565b925082610dfb57610dfa610da6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e2581610e06565b8114610e3057600080fd5b50565b600081519050610e4281610e1c565b92915050565b6000819050919050565b610e5b81610e48565b8114610e6657600080fd5b50565b600081519050610e7881610e52565b92915050565b600081519050610e8d81610a6e565b92915050565b600080600080600060a08688031215610eaf57610eae6109fe565b5b6000610ebd88828901610e33565b9550506020610ece88828901610e69565b9450506040610edf88828901610e7e565b9350506060610ef088828901610e7e565b9250506080610f0188828901610e33565b9150509295509295909350565b6000610f1982610e48565b9150610f2483610e48565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f6357610f62610b6e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fa057610f9f610b6e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fdd57610fdc610b6e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561101a57611019610b6e565b5b82820290509291505056fea26469706673582212200af1447d1f46ed0df570382d3e7a001c0ee24d83b5c67892abd6371cf384749564736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100d9578063b60d428814610104578063db9bae191461010e578063dc0d3dff1461014b57610083565b8063206ddccd1461008d5780633430a88c146100975780633ccfd60b146100c257610083565b3661008357610081610188565b005b61008b610188565b005b6100956102c2565b005b3480156100a357600080fd5b506100ac6104e2565b6040516100b99190610949565b60405180910390f35b3480156100ce57600080fd5b506100d76104ef565b005b3480156100e557600080fd5b506100ee610730565b6040516100fb91906109e3565b60405180910390f35b61010c610188565b005b34801561011a57600080fd5b5061013560048036038101906101309190610a41565b610756565b6040516101429190610949565b60405180910390f35b34801561015757600080fd5b50610172600480360381019061016d9190610a9a565b61076e565b60405161017f9190610ad6565b60405180910390f35b6802b5e3af16b18800006101c7600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346107ad90919063ffffffff16565b11610207576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fe90610b4e565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102b99190610b9d565b92505081905550565b6000600180548060200260200160405190810160405280929190818152602001828054801561034657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102fc575b5050505050905060005b81518110156103d157600082828151811061036e5761036d610bf3565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103c990610c22565b915050610350565b50600067ffffffffffffffff8111156103ed576103ec610c6b565b5b60405190808252806020026020018201604052801561041b5781602001602082028036833780820191505090505b5060019080519060200190610431929190610889565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161045890610ccb565b60006040518083038185875af1925050503d8060008114610495576040519150601f19603f3d011682016040523d82523d6000602084013e61049a565b606091505b50509050806104de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d590610d2c565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610574576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156106205760006001828154811061059a57610599610bf3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061061890610c22565b915050610577565b50600067ffffffffffffffff81111561063c5761063b610c6b565b5b60405190808252806020026020018201604052801561066a5781602001602082028036833780820191505090505b5060019080519060200190610680929190610889565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516106a790610ccb565b60006040518083038185875af1925050503d80600081146106e4576040519150601f19603f3d011682016040523d82523d6000602084013e6106e9565b606091505b505090508061072d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072490610d2c565b60405180910390fd5b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b6001818154811061077e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806107b9836107e9565b90506000670de0b6b3a764000082866107d29190610d4c565b6107dc9190610dd5565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561083257600080fd5b505afa158015610846573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086a9190610e93565b5050509150506402540be400816108819190610f0e565b915050919050565b828054828255906000526020600020908101928215610902579160200282015b828111156109015782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906108a9565b5b50905061090f9190610913565b5090565b5b8082111561092c576000816000905550600101610914565b5090565b6000819050919050565b61094381610930565b82525050565b600060208201905061095e600083018461093a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109a96109a461099f84610964565b610984565b610964565b9050919050565b60006109bb8261098e565b9050919050565b60006109cd826109b0565b9050919050565b6109dd816109c2565b82525050565b60006020820190506109f860008301846109d4565b92915050565b600080fd5b6000610a0e82610964565b9050919050565b610a1e81610a03565b8114610a2957600080fd5b50565b600081359050610a3b81610a15565b92915050565b600060208284031215610a5757610a566109fe565b5b6000610a6584828501610a2c565b91505092915050565b610a7781610930565b8114610a8257600080fd5b50565b600081359050610a9481610a6e565b92915050565b600060208284031215610ab057610aaf6109fe565b5b6000610abe84828501610a85565b91505092915050565b610ad081610a03565b82525050565b6000602082019050610aeb6000830184610ac7565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f20706179206d6f7265210000000000000000000000600082015250565b6000610b38601583610af1565b9150610b4382610b02565b602082019050919050565b60006020820190508181036000830152610b6781610b2b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ba882610930565b9150610bb383610930565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610be857610be7610b6e565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c2d82610930565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c6057610c5f610b6e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cb5600083610c9a565b9150610cc082610ca5565b600082019050919050565b6000610cd682610ca8565b9150819050919050565b7f4661696c65642100000000000000000000000000000000000000000000000000600082015250565b6000610d16600783610af1565b9150610d2182610ce0565b602082019050919050565b60006020820190508181036000830152610d4581610d09565b9050919050565b6000610d5782610930565b9150610d6283610930565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d9b57610d9a610b6e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610de082610930565b9150610deb83610930565b925082610dfb57610dfa610da6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e2581610e06565b8114610e3057600080fd5b50565b600081519050610e4281610e1c565b92915050565b6000819050919050565b610e5b81610e48565b8114610e6657600080fd5b50565b600081519050610e7881610e52565b92915050565b600081519050610e8d81610a6e565b92915050565b600080600080600060a08688031215610eaf57610eae6109fe565b5b6000610ebd88828901610e33565b9550506020610ece88828901610e69565b9450506040610edf88828901610e7e565b9350506060610ef088828901610e7e565b9250506080610f0188828901610e33565b9150509295509295909350565b6000610f1982610e48565b9150610f2483610e48565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f6357610f62610b6e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fa057610f9f610b6e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fdd57610fdc610b6e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561101a57611019610b6e565b5b82820290509291505056fea26469706673582212200af1447d1f46ed0df570382d3e7a001c0ee24d83b5c67892abd6371cf384749564736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 54,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addresstoAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}